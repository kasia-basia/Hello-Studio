.container { max-width: 960px; margin: 0 auto; -webkit-box-sizing: border-box; box-sizing: border-box; }

.container .row { margin-bottom: 20px; display: -webkit-box; display: -ms-flexbox; display: flex; -ms-flex-wrap: wrap; flex-wrap: wrap; }

.container .row .col-1 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-1 { width: 8.33333%; } }

.container .row .col-2 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-2 { width: 16.66667%; } }

.container .row .col-3 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-3 { width: 25%; } }

.container .row .col-4 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-4 { width: 33.33333%; } }

.container .row .col-5 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-5 { width: 41.66667%; } }

.container .row .col-6 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-6 { width: 50%; } }

.container .row .col-7 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-7 { width: 58.33333%; } }

.container .row .col-8 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-8 { width: 66.66667%; } }

.container .row .col-9 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-9 { width: 75%; } }

.container .row .col-10 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-10 { width: 83.33333%; } }

.container .row .col-11 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-11 { width: 91.66667%; } }

.container .row .col-12 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-12 { width: 100%; } }

/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/** 1. Set default font family to sans-serif. 2. Prevent iOS text size adjust after orientation change, without disabling user zoom. */
html { font-family: sans-serif; /* 1 */ -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */ }

/** Remove default margin. */
body { margin: 0; }

/* HTML5 display definitions ========================================================================== */
/** Correct `block` display not defined for any HTML5 element in IE 8/9. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. Correct `block` display not defined for `main` in IE 11. */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; }

/** 1. Correct `inline-block` display not defined in IE 8/9. 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. */
audio, canvas, progress, video { display: inline-block; /* 1 */ vertical-align: baseline; /* 2 */ }

/** Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) { display: none; height: 0; }

/** Address `[hidden]` styling not present in IE 8/9/10. Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22. */
[hidden], template { display: none; }

/* Links ========================================================================== */
/** Remove the gray background color from active links in IE 10. */
a { background-color: transparent; }

/** Improve readability when focused and also mouse hovered in all browsers. */
a:active, a:hover { outline: 0; }

/* Text-level semantics ========================================================================== */
/** Address styling not present in IE 8/9/10/11, Safari, and Chrome. */
abbr[title] { border-bottom: 1px dotted; }

/** Address style set to `bolder` in Firefox 4+, Safari, and Chrome. */
b, strong { font-weight: bold; }

/** Address styling not present in Safari and Chrome. */
dfn { font-style: italic; }

/** Address variable `h1` font-size and margin within `section` and `article` contexts in Firefox 4+, Safari, and Chrome. */
h1 { font-size: 2em; margin: 0.67em 0; }

/** Address styling not present in IE 8/9. */
mark { background: #ff0; color: #000; }

/** Address inconsistent and variable font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

/* Embedded content ========================================================================== */
/** Remove border when inside `a` element in IE 8/9/10. */
img { border: 0; }

/** Correct overflow not hidden in IE 9/10/11. */
svg:not(:root) { overflow: hidden; }

/* Grouping content ========================================================================== */
/** Address margin not present in IE 8/9 and Safari. */
figure { margin: 1em 40px; }

/** Address differences between Firefox and other browsers. */
hr { -webkit-box-sizing: content-box; box-sizing: content-box; height: 0; }

/** Contain overflow in all browsers. */
pre { overflow: auto; }

/** Address odd `em`-unit font size rendering in all browsers. */
code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

/* Forms ========================================================================== */
/** Known limitation: by default, Chrome and Safari on OS X allow very limited styling of `select`, unless a `border` property is set. */
/** 1. Correct color not being inherited. Known issue: affects color of disabled elements. 2. Correct font properties not being inherited. 3. Address margins set differently in Firefox 4+, Safari, and Chrome. */
button, input, optgroup, select, textarea { color: inherit; /* 1 */ font: inherit; /* 2 */ margin: 0; /* 3 */ }

/** Address `overflow` set to `hidden` in IE 8/9/10/11. */
button { overflow: visible; }

/** Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera. Correct `select` style inheritance in Firefox. */
button, select { text-transform: none; }

/** 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Correct inability to style clickable `input` types in iOS. 3. Improve usability and consistency of cursor style between image-type `input` and others. */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/** Re-set default cursor for disabled elements. */
button[disabled], html input[disabled] { cursor: default; }

/** Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/** Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
input { line-height: normal; }

/** It's recommended that you don't attempt to style these elements. Firefox's implementation doesn't respect box-sizing, padding, or width. 1. Address box sizing set to `content-box` in IE 8/9/10. 2. Remove excess padding in IE 8/9/10. */
input[type="checkbox"], input[type="radio"] { -webkit-box-sizing: border-box; box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** Fix the cursor style for Chrome's increment/decrement buttons. For certain `font-size` values of the `input`, it causes the cursor style of the decrement button to change from `default` to `text`. */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button { height: auto; }

/** 1. Address `appearance` set to `searchfield` in Safari and Chrome. 2. Address `box-sizing` set to `border-box` in Safari and Chrome (include `-moz` to future-proof). */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ -webkit-box-sizing: content-box; /* 2 */ box-sizing: content-box; }

/** Remove inner padding and search cancel button in Safari and Chrome on OS X. Safari (but not Chrome) clips the cancel button when the search input has padding (and `textfield` appearance). */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** Define consistent border, margin, and padding. */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct `color` not being inherited in IE 8/9/10/11. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/** Remove default vertical scrollbar in IE 8/9/10/11. */
textarea { overflow: auto; }

/** Don't inherit the `font-weight` (applied by a rule above). NOTE: the default cannot safely be changed in Chrome and Safari on OS X. */
optgroup { font-weight: bold; }

/* Tables ========================================================================== */
/** Remove most spacing between table cells. */
table { border-collapse: collapse; border-spacing: 0; }

td, th { padding: 0; }

.no-scroll { overflow: hidden; }

.hidden { visibility: hidden; }

* { margin: 0; padding: 0; -webkit-box-sizing: border-box; box-sizing: border-box; }

body { font-family: 'Karla', sans-serif; }

h2 { font-family: 'Libre Baskerville', serif; font-style: italic; font-weight: 400; font-size: 50px; margin-bottom: 20px; position: relative; display: inline-block; margin-top: 50px; }

h2:before { content: ''; width: 220px; height: 20px; background-color: #ececec; position: absolute; top: 40%; left: 120%; }

p { font-size: 14px; line-height: 19px; }

.header { height: 90px; }

.header__hamburger { cursor: pointer; margin: 30px; position: absolute; right: 0; z-index: 20; }

.header__hamburger .bar1, .header__hamburger .bar2, .header__hamburger .bar3 { width: 35px; height: 5px; background-color: #333; margin: 6px 0; -webkit-transition: 0.4s; transition: 0.4s; }

.header__hamburger .bar1.change { -webkit-transform: rotate(-45deg) translate(-9px, 6px); transform: rotate(-45deg) translate(-9px, 6px); }

.header__hamburger .bar2.change { opacity: 0; }

.header__hamburger .bar3.change { -webkit-transform: rotate(45deg) translate(-8px, -8px); transform: rotate(45deg) translate(-8px, -8px); }

@media screen and (min-width: 1025px) { .header__hamburger { visibility: hidden; } }

.header__nav-overlay { position: fixed; top: 0; right: 0; width: 0; height: 100%; background-color: #ececec; z-index: 10; -webkit-transition: 0.3s linear; transition: 0.3s linear; }

.header__nav-overlay.active { width: 100%; }

.header__nav { list-style-type: none; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; visibility: hidden; height: 100vh; }

.header__nav .hamburger { visibility: visible; z-index: 100; font-size: 30px; }

@media screen and (min-width: 1025px) { .header__nav { -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; visibility: visible; height: auto; } }

.header__nav li { text-transform: uppercase; font-weight: 700; letter-spacing: 2px; font-size: 14px; margin: 10px; }

.header li a { text-decoration: none; color: black; position: relative; }

.header li a:before { content: ''; position: absolute; height: 4px; width: 0; left: 0; -webkit-transition: 0.2s linear; transition: 0.2s linear; background-color: black; bottom: -10%; }

@media screen and (min-width: 1025px) { .header li a:before { bottom: -50%; background-color: #ececec; } }

.header li a:hover:before { width: 100%; }

.header .whitespace { height: 80px; width: 230px; }

.header .logo-wrapper { display: -webkit-box; display: -ms-flexbox; display: flex; width: 100%; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; position: relative; }

.header__nav-img { height: 80px; z-index: 10; position: absolute; -webkit-transform: translate(0, -60%); transform: translate(0, -60%); margin-top: 95px; }

.banner { height: 470px; }

.banner__bg { width: 100%; height: 100%; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; background-size: cover; background: url("../img/herobanner.jpg") no-repeat center; }

.banner__span { font-size: calc(20px + 4vw); font-family: 'Libre Baskerville', serif; font-style: italic; letter-spacing: 2px; position: relative; z-index: 0; margin-top: 150px; }

.banner__span::before { content: ''; position: absolute; height: calc(10px + 3vw); width: 110%; background-color: white; z-index: -1; left: -5%; }

.offer__list-title { text-transform: uppercase; letter-spacing: 2px; margin-bottom: 10px; }

.offer__list { list-style-type: none; text-transform: uppercase; }

.offer__list li { border-bottom: 2px solid #ececec; height: 50px; line-height: 50px; }

.offer__wrapper { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; position: relative; }

@media screen and (min-width: 768px) { .offer__img-wrapper { position: absolute; margin-top: 100px; margin-left: 50px; z-index: -1; } }

.offer__img-wrapper:before { content: ''; border-radius: 50%; border: 10px solid #ececec; width: 120px; height: 120px; position: absolute; top: 15px; left: 0; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); z-index: -2; visibility: hidden; }

@media screen and (min-width: 768px) { .offer__img-wrapper:before { visibility: visible; } }

.offer__img { margin-top: 0.5em; width: 340px; max-width: 100%; }

.offer__img-title { text-transform: uppercase; letter-spacing: 2px; color: gray; }

.about { min-height: 870px; background: url("../img/about-bg.jpg") no-repeat center; position: relative; z-index: -3; }

.about__title:before { background-color: white; }

.about p { margin-bottom: 30px; }

.contact input { border: none; border-bottom: 2px solid #ececec; height: 2.5rem; margin-bottom: 10px; width: 100%; }

.contact input:focus { outline: none; }

.contact input::-webkit-input-placeholder { font-size: 14px; color: gray; }

.contact input:-ms-input-placeholder { font-size: 14px; color: gray; }

.contact input::-ms-input-placeholder { font-size: 14px; color: gray; }

.contact input::placeholder { font-size: 14px; color: gray; }

.contact button { width: 100%; height: 2.5rem; border: none; background-color: #ececec; text-transform: uppercase; font-size: 14px; margin-top: 2.5rem; }

.contact button:focus { outline: none; }

.contact .contact__container { padding-top: 100px; padding-left: 100px; position: relative; color: gray; width: 100%; overflow: hidden; }

.contact .contact__img-wrapper { position: relative; }

.contact .contact__img-wrapper:before { content: ''; border-radius: 50%; border: 10px solid #ececec; width: 120px; height: 120px; position: absolute; top: 100%; left: 0; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); z-index: -1; }

.contact .contact__img-title { text-transform: uppercase; z-index: 1; letter-spacing: 2px; }

.contact .contact__address { font-size: 14px; margin-top: 20px; }

.contact .contact__address span { font-weight: bold; text-transform: uppercase; }

footer { min-height: 120px; background: url("../img/footer.jpg") no-repeat center; background-size: cover; }

footer .footer__icons-wrapper { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -ms-flex-pack: distribute; justify-content: space-around; min-height: 120px; }

footer .footer__icon { height: 45px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX2dyaWQuc2NzcyIsIm1vZHVsZXMvX3Jlc2V0LnNjc3MiLCJtYWluLmNzcyIsIm1vZHVsZXMvX2dlbmVyYWwuc2NzcyIsIm1vZHVsZXMvX2NvbG9yLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJwYXJ0aWFscy9fYmFubmVyLnNjc3MiLCJwYXJ0aWFscy9fc2VjdGlvbjEuc2NzcyIsInBhcnRpYWxzL19zZWN0aW9uMi5zY3NzIiwicGFydGlhbHMvX3NlY3Rpb24tY29udGFjdC5zY3NzIiwicGFydGlhbHMvX2Zvb3Rlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLGFBQ0UsaUJBQWdCLENBQ2hCLGVBQWMsQ0FDZCwrQkFBc0IsQ0FBdEIsdUJBQXNCLEVBc0J2Qjs7QUF6QkQsa0JBTUksb0JBQW1CLENBQ25CLHFCQUFhLENBQWIscUJBQWEsQ0FBYixjQUFhLENBQ2Isb0JBQWUsQ0FBZixnQkFBZSxFQWdCaEI7O0FBeEJILHlCQWNRLFlBQVcsQ0FDWCxjQUFhLEVBT2Q7O0FBSkMsdUNBbEJSLHlCQW1CVSxnQkFBcUIsRUFHeEIsRUFBQTs7QUF0QlAseUJBY1EsWUFBVyxDQUNYLGNBQWEsRUFPZDs7QUFKQyx1Q0FsQlIseUJBbUJVLGlCQUFxQixFQUd4QixFQUFBOztBQXRCUCx5QkFjUSxZQUFXLENBQ1gsY0FBYSxFQU9kOztBQUpDLHVDQWxCUix5QkFtQlUsV0FBcUIsRUFHeEIsRUFBQTs7QUF0QlAseUJBY1EsWUFBVyxDQUNYLGNBQWEsRUFPZDs7QUFKQyx1Q0FsQlIseUJBbUJVLGlCQUFxQixFQUd4QixFQUFBOztBQXRCUCx5QkFjUSxZQUFXLENBQ1gsY0FBYSxFQU9kOztBQUpDLHVDQWxCUix5QkFtQlUsaUJBQXFCLEVBR3hCLEVBQUE7O0FBdEJQLHlCQWNRLFlBQVcsQ0FDWCxjQUFhLEVBT2Q7O0FBSkMsdUNBbEJSLHlCQW1CVSxXQUFxQixFQUd4QixFQUFBOztBQXRCUCx5QkFjUSxZQUFXLENBQ1gsY0FBYSxF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LG1CQUFrQixDQUNsQixvQkFBbUIsQ0FDbkIsbUJBQWtCLENBQ2xCLFlBQVcsQ0FDWCxZQUFXLENBQ1gsaUJBQWdCLEVBQ2pCOztBQXpDSCxpQ0E0Q0ksbUJBQWtCLEVBYW5COztBQXpESCx3Q0E4Q00sWUFBVyxDQUNYLG1CQUFrQixDQUNsQiwyQkwvQ1csQ0tnRFgsYUFBWSxDQUNaLGNBQWEsQ0FDYixtQkFBa0IsQ0FDbEIsVUFBUyxDQUNULFFBQU8sQ0FDUCx5Q0FBK0IsQ0FBL0IsaUNBQStCLENBQy9CLFlBQVcsRUFDWjs7QUF4REwsK0JBNERJLDBCQUF5QixDQUN6QixXQUFVLENBQ1Ysb0JBQW1CLEVBQ3BCOztBQS9ESCw2QkFrRUksZ0JBQWUsQ0FDZixpQkFBZ0IsRUFLakI7O0FBeEVILGtDQXFFTSxrQkFBaUIsQ0FDakIsMEJBQXlCLEVBQzFCOztBQ3ZFTCxTQUNFLGtCQUFpQixDQUNqQixzREFBcUQsQ0FDckQsdUJBQXNCLEVBY3ZCOztBQWpCRCxnQ0FNSSxxQkFBYSxDQUFiLHFCQUFhLENBQWIsY0FBYSxDQUNiLDBCQUFtQixDQUFuQix1QkFBbUIsQ0FBbkIsb0JBQW1CLENBQ25CLDBCQUE2QixDQUE3Qiw4QkFBNkIsQ0FDN0Isa0JBQWlCLEVBRWxCOztBQVhILHVCQWNJLGFBQVksRUFDYiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogOTYwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gIC5yb3cge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIDEyIHtcbiAgICAgIC5jb2wtI3skaX0ge1xuXG4gICAgICAgIC8vTU9CSUxFXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAyMHB4O1xuXG4gICAgICAgIC8vVEFCTEVUICtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICB3aWR0aDogKDEwMCUvMTIpICogJGk7XG4gICAgICAgICAgLy9wYWRkaW5nOiAwIDEwcHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCIvKiEgbm9ybWFsaXplLnNjc3MgdjAuMS4wIHwgTUlUIExpY2Vuc2UgfCBiYXNlZCBvbiBnaXQuaW8vbm9ybWFsaXplICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi5jb250YWluZXIgeyBtYXgtd2lkdGg6IDk2MHB4OyBtYXJnaW46IDAgYXV0bzsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4uY29udGFpbmVyIC5yb3cgeyBtYXJnaW4tYm90dG9tOiAyMHB4OyBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IH1cblxuLmNvbnRhaW5lciAucm93IC5jb2wtMSB7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiAyMHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7IC5jb250YWluZXIgLnJvdyAuY29sLTEgeyB3aWR0aDogOC4zMzMzMyU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC0yIHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtMiB7IHdpZHRoOiAxNi42NjY2NyU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC0zIHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtMyB7IHdpZHRoOiAyNSU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC00IHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtNCB7IHdpZHRoOiAzMy4zMzMzMyU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC01IHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtNSB7IHdpZHRoOiA0MS42NjY2NyU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC02IHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtNiB7IHdpZHRoOiA1MCU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC03IHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtNyB7IHdpZHRoOiA1OC4zMzMzMyU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC04IHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtOCB7IHdpZHRoOiA2Ni42NjY2NyU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC05IHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtOSB7IHdpZHRoOiA3NSU7IH0gfVxuXG4uY29udGFpbmVyIC5yb3cgLmNvbC0xMCB7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiAyMHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7IC5jb250YWluZXIgLnJvdyAuY29sLTEwIHsgd2lkdGg6IDgzLjMzMzMzJTsgfSB9XG5cbi5jb250YWluZXIgLnJvdyAuY29sLTExIHsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLmNvbnRhaW5lciAucm93IC5jb2wtMTEgeyB3aWR0aDogOTEuNjY2NjclOyB9IH1cblxuLmNvbnRhaW5lciAucm93IC5jb2wtMTIgeyB3aWR0aDogMTAwJTsgcGFkZGluZzogMjBweDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgeyAuY29udGFpbmVyIC5yb3cgLmNvbC0xMiB7IHdpZHRoOiAxMDAlOyB9IH1cblxuLyohIG5vcm1hbGl6ZS5zY3NzIHYwLjEuMCB8IE1JVCBMaWNlbnNlIHwgYmFzZWQgb24gZ2l0LmlvL25vcm1hbGl6ZSAqL1xuLyoqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZyB1c2VyIHpvb20uICovXG5odG1sIHsgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi8gLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi8gLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovIH1cblxuLyoqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi4gKi9cbmJvZHkgeyBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9ucyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExIGFuZCBGaXJlZm94LiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLiAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWFpbiwgbWVudSwgbmF2LCBzZWN0aW9uLCBzdW1tYXJ5IHsgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS4gKi9cbmF1ZGlvLCBjYW52YXMsIHByb2dyZXNzLCB2aWRlbyB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqLyB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi8gfVxuXG4vKiogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy4gUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7IGRpc3BsYXk6IG5vbmU7IGhlaWdodDogMDsgfVxuXG4vKiogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuICovXG5baGlkZGVuXSwgdGVtcGxhdGUgeyBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuICovXG5hIHsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLiAqL1xuYTphY3RpdmUsIGE6aG92ZXIgeyBvdXRsaW5lOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLiAqL1xuYWJiclt0aXRsZV0geyBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuICovXG5iLCBzdHJvbmcgeyBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKiogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLiAqL1xuZGZuIHsgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS4gKi9cbmgxIHsgZm9udC1zaXplOiAyZW07IG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuICovXG5tYXJrIHsgYmFja2dyb3VuZDogI2ZmMDsgY29sb3I6ICMwMDA7IH1cblxuLyoqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLiAqL1xuc21hbGwgeyBmb250LXNpemU6IDgwJTsgfVxuXG4vKiogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLiAqL1xuc3ViLCBzdXAgeyBmb250LXNpemU6IDc1JTsgbGluZS1oZWlnaHQ6IDA7IHBvc2l0aW9uOiByZWxhdGl2ZTsgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7IHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7IGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuICovXG5pbWcgeyBib3JkZXI6IDA7IH1cblxuLyoqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLiAqL1xuc3ZnOm5vdCg6cm9vdCkgeyBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnQgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS4gKi9cbmZpZ3VyZSB7IG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy4gKi9cbmhyIHsgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgYm94LXNpemluZzogY29udGVudC1ib3g7IGhlaWdodDogMDsgfVxuXG4vKiogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuICovXG5wcmUgeyBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKiogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLiAqL1xuY29kZSwga2JkLCBwcmUsIHNhbXAgeyBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IGZvbnQtc2l6ZTogMWVtOyB9XG5cbi8qIEZvcm1zID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWQgc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LiAqL1xuLyoqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC4gS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLiAqL1xuYnV0dG9uLCBpbnB1dCwgb3B0Z3JvdXAsIHNlbGVjdCwgdGV4dGFyZWEgeyBjb2xvcjogaW5oZXJpdDsgLyogMSAqLyBmb250OiBpbmhlcml0OyAvKiAyICovIG1hcmdpbjogMDsgLyogMyAqLyB9XG5cbi8qKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS4gKi9cbmJ1dHRvbiB7IG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC4gKi9cbmJ1dHRvbiwgc2VsZWN0IHsgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gIGNvbnRyb2xzLiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlIGBpbnB1dGAgYW5kIG90aGVycy4gKi9cbmJ1dHRvbiwgaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0geyAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqLyBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi8gfVxuXG4vKiogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sIGh0bWwgaW5wdXRbZGlzYWJsZWRdIHsgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbi8qKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsIGlucHV0OjotbW96LWZvY3VzLWlubmVyIHsgYm9yZGVyOiAwOyBwYWRkaW5nOiAwOyB9XG5cbi8qKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluIHRoZSBVQSBzdHlsZXNoZWV0LiAqL1xuaW5wdXQgeyBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbi8qKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuICovXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi8gcGFkZGluZzogMDsgLyogMiAqLyB9XG5cbi8qKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpbiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZSBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuICovXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHsgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS4gMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZSAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0geyAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqLyAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyB9XG5cbi8qKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC4gU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhcyBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHsgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuICovXG5maWVsZHNldCB7IGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7IG1hcmdpbjogMCAycHg7IHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKiogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuICovXG5sZWdlbmQgeyBib3JkZXI6IDA7IC8qIDEgKi8gcGFkZGluZzogMDsgLyogMiAqLyB9XG5cbi8qKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLiAqL1xudGV4dGFyZWEgeyBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKiogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC4gKi9cbm9wdGdyb3VwIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLiAqL1xudGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3JkZXItc3BhY2luZzogMDsgfVxuXG50ZCwgdGggeyBwYWRkaW5nOiAwOyB9XG5cbi5uby1zY3JvbGwgeyBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5oaWRkZW4geyB2aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuKiB7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5ib2R5IHsgZm9udC1mYW1pbHk6ICdLYXJsYScsIHNhbnMtc2VyaWY7IH1cblxuaDIgeyBmb250LWZhbWlseTogJ0xpYnJlIEJhc2tlcnZpbGxlJywgc2VyaWY7IGZvbnQtc3R5bGU6IGl0YWxpYzsgZm9udC13ZWlnaHQ6IDQwMDsgZm9udC1zaXplOiA1MHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luLXRvcDogNTBweDsgfVxuXG5oMjpiZWZvcmUgeyBjb250ZW50OiAnJzsgd2lkdGg6IDIyMHB4OyBoZWlnaHQ6IDIwcHg7IGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiA0MCU7IGxlZnQ6IDEyMCU7IH1cblxucCB7IGZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDE5cHg7IH1cblxuLmhlYWRlciB7IGhlaWdodDogOTBweDsgfVxuXG4uaGVhZGVyX19oYW1idXJnZXIgeyBjdXJzb3I6IHBvaW50ZXI7IG1hcmdpbjogMzBweDsgcG9zaXRpb246IGFic29sdXRlOyByaWdodDogMDsgei1pbmRleDogMjA7IH1cblxuLmhlYWRlcl9faGFtYnVyZ2VyIC5iYXIxLCAuaGVhZGVyX19oYW1idXJnZXIgLmJhcjIsIC5oZWFkZXJfX2hhbWJ1cmdlciAuYmFyMyB7IHdpZHRoOiAzNXB4OyBoZWlnaHQ6IDVweDsgYmFja2dyb3VuZC1jb2xvcjogIzMzMzsgbWFyZ2luOiA2cHggMDsgdHJhbnNpdGlvbjogMC40czsgfVxuXG4uaGVhZGVyX19oYW1idXJnZXIgLmJhcjEuY2hhbmdlIHsgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoLTlweCwgNnB4KTsgfVxuXG4uaGVhZGVyX19oYW1idXJnZXIgLmJhcjIuY2hhbmdlIHsgb3BhY2l0eTogMDsgfVxuXG4uaGVhZGVyX19oYW1idXJnZXIgLmJhcjMuY2hhbmdlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKC04cHgsIC04cHgpOyB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKC04cHgsIC04cHgpOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgeyAuaGVhZGVyX19oYW1idXJnZXIgeyB2aXNpYmlsaXR5OiBoaWRkZW47IH0gfVxuXG4uaGVhZGVyX19uYXYtb3ZlcmxheSB7IHBvc2l0aW9uOiBmaXhlZDsgdG9wOiAwOyByaWdodDogMDsgd2lkdGg6IDA7IGhlaWdodDogMTAwJTsgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYzsgei1pbmRleDogMTA7IHRyYW5zaXRpb246IDAuM3MgbGluZWFyOyB9XG5cbi5oZWFkZXJfX25hdi1vdmVybGF5LmFjdGl2ZSB7IHdpZHRoOiAxMDAlOyB9XG5cbi5oZWFkZXJfX25hdiB7IGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IHZpc2liaWxpdHk6IGhpZGRlbjsgaGVpZ2h0OiAxMDB2aDsgfVxuXG4uaGVhZGVyX19uYXYgLmhhbWJ1cmdlciB7IHZpc2liaWxpdHk6IHZpc2libGU7IHotaW5kZXg6IDEwMDsgZm9udC1zaXplOiAzMHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgeyAuaGVhZGVyX19uYXYgeyBmbGV4LWRpcmVjdGlvbjogcm93OyB2aXNpYmlsaXR5OiB2aXNpYmxlOyBoZWlnaHQ6IGF1dG87IH0gfVxuXG4uaGVhZGVyX19uYXYgbGkgeyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBmb250LXdlaWdodDogNzAwOyBsZXR0ZXItc3BhY2luZzogMnB4OyBmb250LXNpemU6IDE0cHg7IG1hcmdpbjogMTBweDsgfVxuXG4uaGVhZGVyIGxpIGEgeyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IGNvbG9yOiBibGFjazsgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi5oZWFkZXIgbGkgYTpiZWZvcmUgeyBjb250ZW50OiAnJzsgcG9zaXRpb246IGFic29sdXRlOyBoZWlnaHQ6IDRweDsgd2lkdGg6IDA7IGxlZnQ6IDA7IHRyYW5zaXRpb246IDAuMnMgbGluZWFyOyBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgYm90dG9tOiAtMTAlOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgeyAuaGVhZGVyIGxpIGE6YmVmb3JlIHsgYm90dG9tOiAtNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjOyB9IH1cblxuLmhlYWRlciBsaSBhOmhvdmVyOmJlZm9yZSB7IHdpZHRoOiAxMDAlOyB9XG5cbi5oZWFkZXIgLndoaXRlc3BhY2UgeyBoZWlnaHQ6IDgwcHg7IHdpZHRoOiAyMzBweDsgfVxuXG4uaGVhZGVyIC5sb2dvLXdyYXBwZXIgeyBkaXNwbGF5OiBmbGV4OyB3aWR0aDogMTAwJTsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uaGVhZGVyX19uYXYtaW1nIHsgaGVpZ2h0OiA4MHB4OyB6LWluZGV4OiAxMDsgcG9zaXRpb246IGFic29sdXRlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNjAlKTsgbWFyZ2luLXRvcDogOTVweDsgfVxuXG4uYmFubmVyIHsgaGVpZ2h0OiA0NzBweDsgfVxuXG4uYmFubmVyX19iZyB7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogY2VudGVyOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvaGVyb2Jhbm5lci5qcGdcIikgbm8tcmVwZWF0IGNlbnRlcjsgfVxuXG4uYmFubmVyX19zcGFuIHsgZm9udC1zaXplOiBjYWxjKDIwcHggKyA0dncpOyBmb250LWZhbWlseTogJ0xpYnJlIEJhc2tlcnZpbGxlJywgc2VyaWY7IGZvbnQtc3R5bGU6IGl0YWxpYzsgbGV0dGVyLXNwYWNpbmc6IDJweDsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAwOyBtYXJnaW4tdG9wOiAxNTBweDsgfVxuXG4uYmFubmVyX19zcGFuOjpiZWZvcmUgeyBjb250ZW50OiAnJzsgcG9zaXRpb246IGFic29sdXRlOyBoZWlnaHQ6IGNhbGMoMTBweCArIDN2dyk7IHdpZHRoOiAxMTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgei1pbmRleDogLTE7IGxlZnQ6IC01JTsgfVxuXG4ub2ZmZXJfX2xpc3QtdGl0bGUgeyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBsZXR0ZXItc3BhY2luZzogMnB4OyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cbi5vZmZlcl9fbGlzdCB7IGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4ub2ZmZXJfX2xpc3QgbGkgeyBib3JkZXItYm90dG9tOiAycHggc29saWQgI2VjZWNlYzsgaGVpZ2h0OiA1MHB4OyBsaW5lLWhlaWdodDogNTBweDsgfVxuXG4ub2ZmZXJfX3dyYXBwZXIgeyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsgLm9mZmVyX19pbWctd3JhcHBlciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgbWFyZ2luLXRvcDogMTAwcHg7IG1hcmdpbi1sZWZ0OiA1MHB4OyB6LWluZGV4OiAtMTsgfSB9XG5cbi5vZmZlcl9faW1nLXdyYXBwZXI6YmVmb3JlIHsgY29udGVudDogJyc7IGJvcmRlci1yYWRpdXM6IDUwJTsgYm9yZGVyOiAxMHB4IHNvbGlkICNlY2VjZWM7IHdpZHRoOiAxMjBweDsgaGVpZ2h0OiAxMjBweDsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDE1cHg7IGxlZnQ6IDA7IHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB6LWluZGV4OiAtMjsgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7IC5vZmZlcl9faW1nLXdyYXBwZXI6YmVmb3JlIHsgdmlzaWJpbGl0eTogdmlzaWJsZTsgfSB9XG5cbi5vZmZlcl9faW1nIHsgbWFyZ2luLXRvcDogMC41ZW07IHdpZHRoOiAzNDBweDsgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi5vZmZlcl9faW1nLXRpdGxlIHsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgbGV0dGVyLXNwYWNpbmc6IDJweDsgY29sb3I6IGdyYXk7IH1cblxuLmFib3V0IHsgbWluLWhlaWdodDogODcwcHg7IGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9hYm91dC1iZy5qcGdcIikgbm8tcmVwZWF0IGNlbnRlcjsgcG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAtMzsgfVxuXG4uYWJvdXRfX3RpdGxlOmJlZm9yZSB7IGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG5cbi5hYm91dCBwIHsgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4uY29udGFjdCBpbnB1dCB7IGJvcmRlcjogbm9uZTsgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNlY2VjZWM7IGhlaWdodDogMi41cmVtOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB3aWR0aDogMTAwJTsgfVxuXG4uY29udGFjdCBpbnB1dDpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IH1cblxuLmNvbnRhY3QgaW5wdXQ6OnBsYWNlaG9sZGVyIHsgZm9udC1zaXplOiAxNHB4OyBjb2xvcjogZ3JheTsgfVxuXG4uY29udGFjdCBidXR0b24geyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAyLjVyZW07IGJvcmRlcjogbm9uZTsgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYzsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgZm9udC1zaXplOiAxNHB4OyBtYXJnaW4tdG9wOiAyLjVyZW07IH1cblxuLmNvbnRhY3QgYnV0dG9uOmZvY3VzIHsgb3V0bGluZTogbm9uZTsgfVxuXG4uY29udGFjdCAuY29udGFjdF9fY29udGFpbmVyIHsgcGFkZGluZy10b3A6IDEwMHB4OyBwYWRkaW5nLWxlZnQ6IDEwMHB4OyBwb3NpdGlvbjogcmVsYXRpdmU7IGNvbG9yOiBncmF5OyB3aWR0aDogMTAwJTsgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4uY29udGFjdCAuY29udGFjdF9faW1nLXdyYXBwZXIgeyBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmNvbnRhY3QgLmNvbnRhY3RfX2ltZy13cmFwcGVyOmJlZm9yZSB7IGNvbnRlbnQ6ICcnOyBib3JkZXItcmFkaXVzOiA1MCU7IGJvcmRlcjogMTBweCBzb2xpZCAjZWNlY2VjOyB3aWR0aDogMTIwcHg7IGhlaWdodDogMTIwcHg7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAxMDAlOyBsZWZ0OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgei1pbmRleDogLTE7IH1cblxuLmNvbnRhY3QgLmNvbnRhY3RfX2ltZy10aXRsZSB7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IHotaW5kZXg6IDE7IGxldHRlci1zcGFjaW5nOiAycHg7IH1cblxuLmNvbnRhY3QgLmNvbnRhY3RfX2FkZHJlc3MgeyBmb250LXNpemU6IDE0cHg7IG1hcmdpbi10b3A6IDIwcHg7IH1cblxuLmNvbnRhY3QgLmNvbnRhY3RfX2FkZHJlc3Mgc3BhbiB7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbmZvb3RlciB7IG1pbi1oZWlnaHQ6IDEyMHB4OyBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvZm9vdGVyLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG5cbmZvb3RlciAuZm9vdGVyX19pY29ucy13cmFwcGVyIHsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7IG1pbi1oZWlnaHQ6IDEyMHB4OyB9XG5cbmZvb3RlciAuZm9vdGVyX19pY29uIHsgaGVpZ2h0OiA0NXB4OyB9XG4iLCJcbiR0YWJsZXQ6IFwic2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweClcIjtcbiRkZXNrdG9wOiBcInNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KVwiO1xuXG4ubm8tc2Nyb2xse1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGlkZGVue1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbip7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keXtcbiAgZm9udC1mYW1pbHk6ICdLYXJsYScsIHNhbnMtc2VyaWY7XG59XG5cbmgye1xuICBmb250LWZhbWlseTogJ0xpYnJlIEJhc2tlcnZpbGxlJywgc2VyaWY7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiA1MHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogNTBweDtcbn1cblxuaDI6YmVmb3Jle1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDIyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICRsaWdodEJnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNDAlO1xuICBsZWZ0OiAxMjAlO1xuXG59XG5cbnB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG59IiwiJHRleHQ6ICMwMDA7XG4kbGlnaHRCZzogI2VjZWNlYztcbiIsIi5oZWFkZXIge1xuICBoZWlnaHQ6IDkwcHg7XG5cbiAgJl9faGFtYnVyZ2VyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWFyZ2luOiAzMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAyMDtcblxuICAgIC5iYXIxLFxuICAgIC5iYXIyLFxuICAgIC5iYXIzIHtcbiAgICAgIHdpZHRoOiAzNXB4O1xuICAgICAgaGVpZ2h0OiA1cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICAgICAgbWFyZ2luOiA2cHggMDtcbiAgICAgIHRyYW5zaXRpb246IDAuNHM7XG4gICAgfVxuXG4gICAgLmJhcjEuY2hhbmdlIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKC05cHgsIDZweCk7XG4gICAgfVxuXG4gICAgLmJhcjIuY2hhbmdlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgLmJhcjMuY2hhbmdlIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgtOHB4LCAtOHB4KTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoLThweCwgLThweCk7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JGRlc2t0b3B9e1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIH1cblxuICB9XG5cbiAgJl9fbmF2LW92ZXJsYXkge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodEJnO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHRyYW5zaXRpb246IDAuM3MgbGluZWFyO1xuXG4gICAgJi5hY3RpdmUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbiAgJl9fbmF2IHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIC8vcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMTAwdmg7XG5cbiAgICAuaGFtYnVyZ2VyIHtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICB6LWluZGV4OiAxMDA7XG4gICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhICN7JGRlc2t0b3B9e1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuXG4gIH1cblxuICAmX19uYXYgbGkge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW46IDEwcHg7XG4gIH1cblxuICBsaSBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gIGxpIGE6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiA0cHg7XG4gICAgd2lkdGg6IDA7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2l0aW9uOiAwLjJzIGxpbmVhcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3R0b206IC0xMCU7XG5cbiAgICBAbWVkaWEgI3skZGVza3RvcH17XG4gICAgICBib3R0b206IC01MCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHRCZztcbiAgICB9XG4gIH1cblxuICBsaSBhOmhvdmVyOmJlZm9yZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAud2hpdGVzcGFjZSB7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICAgIHdpZHRoOiAyMzBweDtcbiAgfVxuXG4gIC5sb2dvLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgJl9fbmF2LWltZyB7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNjAlKTtcbiAgICBtYXJnaW4tdG9wOiA5NXB4O1xuICB9XG59IiwiLmJhbm5lciB7XG4gIGhlaWdodDogNDcwcHg7XG5cbiAgJl9fYmcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvaGVyb2Jhbm5lci5qcGcnKSBuby1yZXBlYXQgY2VudGVyO1xuICB9XG5cbiAgJl9fc3BhbiB7XG4gICAgZm9udC1zaXplOiBjYWxjKDIwcHggKyA0dncpO1xuICAgIGZvbnQtZmFtaWx5OiAnTGlicmUgQmFza2VydmlsbGUnLCBzZXJpZjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMDtcbiAgICBtYXJnaW4tdG9wOiAxNTBweDtcblxuICAgICY6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogY2FsYygxMHB4ICsgM3Z3KTtcbiAgICAgIHdpZHRoOiAxMTAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIGxlZnQ6IC01JTtcbiAgICB9XG4gIH1cblxufSIsIi5vZmZlciB7XG5cbiAgJl9fdGl0bGUge1xuXG4gIH1cblxuICAmX19saXN0LXRpdGxlIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxuXG4gICZfX2xpc3Qge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG5cbiAgJl9fbGlzdCBsaSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRsaWdodEJnO1xuICAgIGhlaWdodDogNTBweDtcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgfVxuXG4gICZfX3dyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICAmX19pbWctd3JhcHBlciB7XG5cbiAgICBAbWVkaWEgI3skdGFibGV0fXtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIG1hcmdpbi10b3A6IDEwMHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG5cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgYm9yZGVyOiAxMHB4IHNvbGlkICRsaWdodEJnO1xuICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgaGVpZ2h0OiAxMjBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTVweDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgIHotaW5kZXg6IC0yO1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXG4gICAgICBAbWVkaWEgI3skdGFibGV0fXtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gICZfX2ltZyB7XG4gICAgbWFyZ2luLXRvcDogMC41ZW07XG4gICAgd2lkdGg6IDM0MHB4O1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuXG4gICZfX2ltZy10aXRsZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICAgIGNvbG9yOiBncmF5O1xuICB9XG5cbn1cblxuXG4iLCIuYWJvdXR7XG4gIG1pbi1oZWlnaHQ6IDg3MHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9hYm91dC1iZy5qcGcnKSBuby1yZXBlYXQgY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IC0zO1xuICAmX190aXRsZXtcblxuICB9XG5cbiAgJl9fdGl0bGU6YmVmb3Jle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICB9XG5cbiAgcHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG5cbn0iLCIuY29udGFjdCB7XG5cbiAgaW5wdXQge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGxpZ2h0Qmc7XG4gICAgaGVpZ2h0OiAyLjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG5cbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBjb2xvcjogZ3JheTtcbiAgICB9XG5cbiAgfVxuXG4gIGJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyLjVyZW07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodEJnO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIG1hcmdpbi10b3A6IDIuNXJlbTtcblxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAuY29udGFjdF9fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuXG4gIC5jb250YWN0X19pbWctd3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgYm9yZGVyOiAxMHB4IHNvbGlkICRsaWdodEJnO1xuICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgaGVpZ2h0OiAxMjBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTAwJTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xuICAgICAgei1pbmRleDogLTE7XG4gICAgfVxuICB9XG5cbiAgLmNvbnRhY3RfX2ltZy10aXRsZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIH1cblxuICAuY29udGFjdF9fYWRkcmVzcyB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgJiBzcGFue1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIH1cbiAgfVxuXG59XG5cblxuIiwiZm9vdGVye1xuICBtaW4taGVpZ2h0OiAxMjBweDtcbiAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvZm9vdGVyLmpwZycpIG5vLXJlcGVhdCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbiAgLmZvb3Rlcl9faWNvbnMtd3JhcHBlcntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgbWluLWhlaWdodDogMTIwcHg7XG5cbiAgfVxuXG4gIC5mb290ZXJfX2ljb257XG4gICAgaGVpZ2h0OiA0NXB4O1xuICB9XG5cbn0iXX0= */
