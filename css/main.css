.container { max-width: 960px; margin: 0 auto; -webkit-box-sizing: border-box; box-sizing: border-box; }

.container .row { margin-bottom: 20px; display: -webkit-box; display: -ms-flexbox; display: flex; -ms-flex-wrap: wrap; flex-wrap: wrap; }

.container .row .col-1 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-1 { width: 8.33333%; } }

.container .row .col-2 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-2 { width: 16.66667%; } }

.container .row .col-3 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-3 { width: 25%; } }

.container .row .col-4 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-4 { width: 33.33333%; } }

.container .row .col-5 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-5 { width: 41.66667%; } }

.container .row .col-6 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-6 { width: 50%; } }

.container .row .col-7 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-7 { width: 58.33333%; } }

.container .row .col-8 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-8 { width: 66.66667%; } }

.container .row .col-9 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-9 { width: 75%; } }

.container .row .col-10 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-10 { width: 83.33333%; } }

.container .row .col-11 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-11 { width: 91.66667%; } }

.container .row .col-12 { width: 100%; padding: 20px; }

@media screen and (min-width: 768px) { .container .row .col-12 { width: 100%; } }

/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/** 1. Set default font family to sans-serif. 2. Prevent iOS text size adjust after orientation change, without disabling user zoom. */
html { font-family: sans-serif; /* 1 */ -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */ }

/** Remove default margin. */
body { margin: 0; }

/* HTML5 display definitions ========================================================================== */
/** Correct `block` display not defined for any HTML5 element in IE 8/9. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. Correct `block` display not defined for `main` in IE 11. */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; }

/** 1. Correct `inline-block` display not defined in IE 8/9. 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. */
audio, canvas, progress, video { display: inline-block; /* 1 */ vertical-align: baseline; /* 2 */ }

/** Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) { display: none; height: 0; }

/** Address `[hidden]` styling not present in IE 8/9/10. Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22. */
[hidden], template { display: none; }

/* Links ========================================================================== */
/** Remove the gray background color from active links in IE 10. */
a { background-color: transparent; }

/** Improve readability when focused and also mouse hovered in all browsers. */
a:active, a:hover { outline: 0; }

/* Text-level semantics ========================================================================== */
/** Address styling not present in IE 8/9/10/11, Safari, and Chrome. */
abbr[title] { border-bottom: 1px dotted; }

/** Address style set to `bolder` in Firefox 4+, Safari, and Chrome. */
b, strong { font-weight: bold; }

/** Address styling not present in Safari and Chrome. */
dfn { font-style: italic; }

/** Address variable `h1` font-size and margin within `section` and `article` contexts in Firefox 4+, Safari, and Chrome. */
h1 { font-size: 2em; margin: 0.67em 0; }

/** Address styling not present in IE 8/9. */
mark { background: #ff0; color: #000; }

/** Address inconsistent and variable font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

/* Embedded content ========================================================================== */
/** Remove border when inside `a` element in IE 8/9/10. */
img { border: 0; }

/** Correct overflow not hidden in IE 9/10/11. */
svg:not(:root) { overflow: hidden; }

/* Grouping content ========================================================================== */
/** Address margin not present in IE 8/9 and Safari. */
figure { margin: 1em 40px; }

/** Address differences between Firefox and other browsers. */
hr { -webkit-box-sizing: content-box; box-sizing: content-box; height: 0; }

/** Contain overflow in all browsers. */
pre { overflow: auto; }

/** Address odd `em`-unit font size rendering in all browsers. */
code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

/* Forms ========================================================================== */
/** Known limitation: by default, Chrome and Safari on OS X allow very limited styling of `select`, unless a `border` property is set. */
/** 1. Correct color not being inherited. Known issue: affects color of disabled elements. 2. Correct font properties not being inherited. 3. Address margins set differently in Firefox 4+, Safari, and Chrome. */
button, input, optgroup, select, textarea { color: inherit; /* 1 */ font: inherit; /* 2 */ margin: 0; /* 3 */ }

/** Address `overflow` set to `hidden` in IE 8/9/10/11. */
button { overflow: visible; }

/** Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera. Correct `select` style inheritance in Firefox. */
button, select { text-transform: none; }

/** 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Correct inability to style clickable `input` types in iOS. 3. Improve usability and consistency of cursor style between image-type `input` and others. */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/** Re-set default cursor for disabled elements. */
button[disabled], html input[disabled] { cursor: default; }

/** Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/** Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
input { line-height: normal; }

/** It's recommended that you don't attempt to style these elements. Firefox's implementation doesn't respect box-sizing, padding, or width. 1. Address box sizing set to `content-box` in IE 8/9/10. 2. Remove excess padding in IE 8/9/10. */
input[type="checkbox"], input[type="radio"] { -webkit-box-sizing: border-box; box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** Fix the cursor style for Chrome's increment/decrement buttons. For certain `font-size` values of the `input`, it causes the cursor style of the decrement button to change from `default` to `text`. */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button { height: auto; }

/** 1. Address `appearance` set to `searchfield` in Safari and Chrome. 2. Address `box-sizing` set to `border-box` in Safari and Chrome (include `-moz` to future-proof). */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ -webkit-box-sizing: content-box; /* 2 */ box-sizing: content-box; }

/** Remove inner padding and search cancel button in Safari and Chrome on OS X. Safari (but not Chrome) clips the cancel button when the search input has padding (and `textfield` appearance). */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** Define consistent border, margin, and padding. */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct `color` not being inherited in IE 8/9/10/11. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/** Remove default vertical scrollbar in IE 8/9/10/11. */
textarea { overflow: auto; }

/** Don't inherit the `font-weight` (applied by a rule above). NOTE: the default cannot safely be changed in Chrome and Safari on OS X. */
optgroup { font-weight: bold; }

/* Tables ========================================================================== */
/** Remove most spacing between table cells. */
table { border-collapse: collapse; border-spacing: 0; }

td, th { padding: 0; }

* { margin: 0; padding: 0; -webkit-box-sizing: border-box; box-sizing: border-box; }

body { font-family: 'Karla', sans-serif; }

h2 { font-family: 'Libre Baskerville', serif; font-style: italic; font-weight: 400; font-size: 50px; margin-bottom: 20px; position: relative; display: inline-block; margin-top: 50px; }

h2:before { content: ''; width: 220px; height: 20px; background-color: #ececec; position: absolute; top: 40%; left: 120%; }

p { font-size: 14px; line-height: 19px; }

.header { height: 90px; }

.header__nav { list-style-type: none; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center; }

.header__nav li { text-transform: uppercase; font-weight: 700; letter-spacing: 2px; font-size: 14px; margin: -25px 10px 10px; }

.header__nav-img { height: 80px; display: inline-block; margin: 50px 40px 0px; z-index: 10; }

.banner { height: 470px; }

.banner__bg { width: 100%; height: 100%; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; background-size: contain; background: url("../img/herobanner.jpg") no-repeat center; }

.banner__span { font-size: 60px; font-family: 'Libre Baskerville', serif; font-style: italic; letter-spacing: 2px; position: relative; z-index: 0; margin-top: 150px; }

.banner__span::before { content: ''; position: absolute; height: 40px; width: 110%; background-color: white; z-index: -1; top: 0; left: -5%; }

.offer__list-title { text-transform: uppercase; letter-spacing: 2px; margin-bottom: 10px; }

.offer__list { list-style-type: none; text-transform: uppercase; }

.offer__list li { border-bottom: 2px solid #ececec; height: 50px; line-height: 50px; }

.about { min-height: 870px; background: url("../img/about-bg.jpg") no-repeat center; }

.about__title:before { background-color: white; }

.about p { margin-bottom: 30px; }

.contact input { border: none; border-bottom: 2px solid #ececec; height: 2.5rem; margin-bottom: 10px; width: 100%; }

.contact input:focus { outline: none; }

.contact input::-webkit-input-placeholder { font-size: 14px; color: gray; }

.contact input:-ms-input-placeholder { font-size: 14px; color: gray; }

.contact input::-ms-input-placeholder { font-size: 14px; color: gray; }

.contact input::placeholder { font-size: 14px; color: gray; }

.contact button { width: 100%; height: 2.5rem; border: none; background-color: #ececec; text-transform: uppercase; font-size: 14px; margin-top: 2.5rem; }

.contact button:focus { outline: none; }

.contact .contact__container { padding-top: 100px; padding-left: 100px; position: relative; color: gray; }

.contact .contact__img-wrapper { position: relative; }

.contact .contact__img-wrapper:before { content: ''; border-radius: 50%; border: 10px solid #ececec; width: 120px; height: 120px; position: absolute; top: 100%; left: 0; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); z-index: -1; }

.contact .contact__img-title { text-transform: uppercase; z-index: 1; letter-spacing: 2px; }

.contact .contact__address { font-size: 14px; margin-top: 20px; }

.contact .contact__address span { font-weight: bold; text-transform: uppercase; }

footer { min-height: 120px; background: url("../img/footer.jpg") no-repeat center; background-size: cover; }

footer .footer__icons-wrapper { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -ms-flex-pack: distribute; justify-content: space-around; }

footer .footer__icon { height: 45px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
